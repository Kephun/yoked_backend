{
	"info": {
		"_postman_id": "0bb46521-89a5-4804-9d12-c475cb809196",
		"name": "YOKED",
		"description": "### Welcome to Postman! This is your first collection.\n\nCollections are your starting point for building and testing APIs. You can use this one to:\n\n• Group related requests  \n• Test your API in real-world scenarios  \n• Document and share your requests\n\nUpdate the name and overview whenever you’re ready to make it yours.\n\n[Learn more about Postman Collections.](https://learning.postman.com/docs/collections/collections-overview/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48151684",
		"_collection_link": "https://kevin-horng422-5425686.postman.co/workspace/Kevin-Horng's-Workspace~29449fed-ba14-4a00-803b-f2028d526d0c/collection/48151684-0bb46521-89a5-4804-9d12-c475cb809196?action=share&source=collection_link&creator=48151684"
	},
	"item": [
		{
			"name": "Initial Process - Register / Log in and out",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData && jsonData.token) {",
									"    // Assign the token to an environment variable",
									"    pm.environment.set(\"access_token\", jsonData.token);",
									"    console.log(\"Token successfully assigned to environment variable.\");",
									"} else {",
									"    console.warn(\"No 'token' key found in the response or token value is empty.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"email\": \"test@example.com\",\n  \"password_hash\": \"password123\",\n  \"name\": \"Test User\",\n  \"age\": 25,\n  \"sex\": \"male\",\n  \"height\": 175.5,\n  \"weight\": 70.0,\n  \"activity_level\": \"moderately_active\",\n  \"goal\": \"muscle_gain\",\n  \"weekly_budget\": 150.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"if (jsonData && jsonData.token) {\r",
									"    // Assign the token to an environment variable\r",
									"    pm.environment.set(\"access_token\", jsonData.token);\r",
									"    console.log(\"Token successfully assigned to environment variable.\");\r",
									"} else {\r",
									"    console.warn(\"No 'token' key found in the response or token value is empty.\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"if (jsonData && jsonData.token) {\r",
									"    // Assign the token to an environment variable\r",
									"    pm.environment.set(\"access_token\", jsonData.token);\r",
									"    console.log(\"Token successfully assigned to environment variable.\");\r",
									"} else {\r",
									"    console.warn(\"No 'token' key found in the response or token value is empty.\");\r",
									"}\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    const response = pm.response.json();\r",
									"    pm.environment.set(\"access_token\", response.token);\r",
									"    pm.environment.set(\"user_id\", response.user.id);\r",
									"    console.log(\"Token saved:\", response.token);\r",
									"} else {\r",
									"    console.warn(\"Reponse 200 was not returned\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Profile Function",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"weight\": 72.5,\r\n  \"height\": 176.0,\r\n  \"activity_level\": \"very_active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Preferences",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/me/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me",
								"preferences"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Preferences",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"preferences\": [\"chicken\", \"vegetables\", \"rice\"],\r\n  \"allergies\": [\"shellfish\", \"peanuts\"],\r\n  \"dislikes\": [\"broccoli\", \"sweet_potato\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/me/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me",
								"preferences"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"old_password\": \"password123\",\r\n  \"new_password\": \"newpassword456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/me/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Stats",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/me/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me",
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Workout Function",
			"item": [
				{
					"name": "Get Workout History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workouts?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Workout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"My Custom Workout\",\r\n  \"type\": \"strength\",\r\n  \"duration_weeks\": 4,\r\n  \"completed\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workouts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Workout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"hypertrophy\",\r\n  \"duration\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workouts/generate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts",
								"generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workout Details",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workouts/{workout_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts",
								"{workout_id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workout Sessions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workouts/{workout_id}/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts",
								"{workout_id}",
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Session Function",
			"item": [
				{
					"name": "Get Workout Session",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workouts/sessions/{session_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts",
								"sessions",
								"{session_id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Session",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workouts/sessions/{session_id}/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts",
								"sessions",
								"{session_id}",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete Session",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workouts/sessions/{session_id}/complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts",
								"sessions",
								"{session_id}",
								"complete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Session Exercises",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workouts/sessions/{session_id}/exercises",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts",
								"sessions",
								"{session_id}",
								"exercises"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log Exercise",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Bench Press\",\r\n  \"sets\": 4,\r\n  \"reps\": 8,\r\n  \"weight\": 185.5,\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workouts/sessions/{session_id}/exercises",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workouts",
								"sessions",
								"{session_id}",
								"exercises"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "jwt",
		"jwt": [
			{
				"key": "algorithm",
				"value": "HS256",
				"type": "string"
			},
			{
				"key": "isSecretBase64Encoded",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "payload",
				"value": "{}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "headerPrefix",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "queryParamKey",
				"value": "token",
				"type": "string"
			},
			{
				"key": "header",
				"value": "{}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}